name: dream-forge

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: dfs
      POSTGRES_PASSWORD: dfs
      POSTGRES_DB: dreamforge
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dfs"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  minio:
    image: quay.io/minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10

  minio-create-bucket:
    image: quay.io/minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    entrypoint: ["/bin/sh", "-c"]
    command: >-
      "mc alias set local http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD && \
       mc mb --ignore-existing local/dreamforge && \
       mc anonymous set none local/dreamforge || true"

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    environment:
      DF_DB_URL: postgresql+psycopg://dfs:dfs@postgres:5432/dreamforge
      DF_REDIS_URL: redis://redis:6379/0
      DF_MINIO_ENDPOINT: http://minio:9000
      DF_MINIO_ACCESS_KEY: minioadmin
      DF_MINIO_SECRET_KEY: minioadmin
      DF_MINIO_BUCKET: dreamforge
      DF_READY_CHECKS: db,s3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-create-bucket:
        condition: service_completed_successfully
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - ${HOME}/.cache/dream-forge:/models:ro
    environment:
      DF_MODELS_ROOT: /models

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.worker
    environment:
      DF_DB_URL: postgresql+psycopg://dfs:dfs@postgres:5432/dreamforge
      DF_REDIS_URL: redis://redis:6379/0
      DF_MINIO_ENDPOINT: http://minio:9000
      DF_MINIO_ACCESS_KEY: minioadmin
      DF_MINIO_SECRET_KEY: minioadmin
      DF_MINIO_BUCKET: dreamforge
      DF_WORKER_METRICS_PORT: 9009
      DF_WORKER_CONCURRENCY: 2
    devices:
      - driver: cdi
        device_ids: ["nvidia.com/gpu=all"]
    environment:
      DF_DB_URL: postgresql+psycopg://dfs:dfs@postgres:5432/dreamforge
      DF_REDIS_URL: redis://redis:6379/0
      DF_MINIO_ENDPOINT: http://minio:9000
      DF_MINIO_ACCESS_KEY: minioadmin
      DF_MINIO_SECRET_KEY: minioadmin
      DF_MINIO_BUCKET: dreamforge
      DF_WORKER_METRICS_PORT: 9009
      DF_WORKER_CONCURRENCY: 2
      DF_MODELS_ROOT: /models
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9009/metrics"]
      interval: 10s
      timeout: 3s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "9010:9009"
    volumes:
      - ${HOME}/.cache/dream-forge:/models:ro

volumes:
  pgdata:
  minio-data:
